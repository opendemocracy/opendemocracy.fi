// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package fi.opendemocracy.voting.web.ui;

import com.vaadin.addon.jpacontainer.EntityItem;
import com.vaadin.addon.jpacontainer.JPAContainer;
import com.vaadin.data.Item;
import com.vaadin.ui.Table;
import fi.opendemocracy.voting.domain.Category;
import fi.opendemocracy.voting.web.EntityProviderUtil;
import fi.opendemocracy.voting.web.EntityTableColumnGenerator;
import java.lang.Class;
import java.lang.String;
import java.util.List;

privileged aspect CategoryView_Roo_VaadinEntityView {
    
    private JPAContainer<Category> CategoryView.tableContainer;
    
    public String CategoryView.getEntityName() {
        return "Category";
    }
    
    public Class<Category> CategoryView.getEntityClass() {
        return Category.class;
    }
    
    public boolean CategoryView.isCreateAllowed() {
        return true;
    }
    
    public boolean CategoryView.isUpdateAllowed() {
        return true;
    }
    
    public boolean CategoryView.isDeleteAllowed() {
        return true;
    }
    
    public List<Category> CategoryView.listEntities() {
        List<Category> list = Category.findAllCategorys();
        return list;
    }
    
    public Category CategoryView.saveEntity(Category entity) {
        if (entity == null) {
            return null;
        }
        return (Category) entity.merge();
    }
    
    public void CategoryView.deleteEntity(Category entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean CategoryView.isNewEntity(Category entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String CategoryView.getIdProperty() {
        return "id";
    }
    
    public String CategoryView.getVersionProperty() {
        return "version";
    }
    
    public Category CategoryView.createEntityInstance() {
        return new Category();
    }
    
    public JPAContainer<Category> CategoryView.getTableContainer() {
        if (tableContainer == null) {
            JPAContainer<Category> container = new JPAContainer<Category>(Category.class);
            container.setEntityProvider(EntityProviderUtil.get().getEntityProvider(Category.class));
            tableContainer = container;
        }
        return tableContainer;
    }
    
    public Item CategoryView.getItemForEntity(Category entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = tableContainer.createEntityItem(entity);
        }
        return item;
    }
    
    public Category CategoryView.getEntityForItem(Item item) {
        if (item instanceof EntityItem && ((EntityItem) item).getEntity() instanceof Category) {
            return (Category) ((EntityItem) item).getEntity();
        } else {
            return null;
        }
    }
    
    public Object CategoryView.getIdForEntity(Category entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void CategoryView.setupGeneratedColumns(Table table) {
        // Add generated columns here
    }
    
}
