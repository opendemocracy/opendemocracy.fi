// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package fi.opendemocracy.domain;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Vote_Roo_Finder {
    
    public static TypedQuery<Vote> Vote.findVotesByOdUser(ODUser odUser) {
        if (odUser == null) throw new IllegalArgumentException("The odUser argument is required");
        EntityManager em = Vote.entityManager();
        TypedQuery<Vote> q = em.createQuery("SELECT o FROM Vote AS o WHERE o.odUser = :odUser", Vote.class);
        q.setParameter("odUser", odUser);
        return q;
    }
    
    public static TypedQuery<Vote> Vote.findVotesByPropositionAndPropositionOption(Proposition proposition, PropositionOption propositionOption) {
        if (proposition == null) throw new IllegalArgumentException("The proposition argument is required");
        if (propositionOption == null) throw new IllegalArgumentException("The propositionOption argument is required");
        EntityManager em = Vote.entityManager();
        TypedQuery<Vote> q = em.createQuery("SELECT o FROM Vote AS o WHERE o.proposition = :proposition AND o.propositionOption = :propositionOption", Vote.class);
        q.setParameter("proposition", proposition);
        q.setParameter("propositionOption", propositionOption);
        return q;
    }
    
}
