// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package fi.opendemocracy.domain;

import fi.opendemocracy.domain.Category;
import fi.opendemocracy.domain.Expert;
import fi.opendemocracy.domain.ODUser;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Expert_Roo_Finder {
    
    public static TypedQuery<Expert> Expert.findExpertsByCategory(Category category) {
        if (category == null) throw new IllegalArgumentException("The category argument is required");
        EntityManager em = Expert.entityManager();
        TypedQuery<Expert> q = em.createQuery("SELECT o FROM Expert AS o WHERE o.category = :category", Expert.class);
        q.setParameter("category", category);
        return q;
    }
    
    public static TypedQuery<Expert> Expert.findExpertsByOdUser(ODUser odUser) {
        if (odUser == null) throw new IllegalArgumentException("The odUser argument is required");
        EntityManager em = Expert.entityManager();
        TypedQuery<Expert> q = em.createQuery("SELECT o FROM Expert AS o WHERE o.odUser = :odUser", Expert.class);
        q.setParameter("odUser", odUser);
        return q;
    }
    
}
