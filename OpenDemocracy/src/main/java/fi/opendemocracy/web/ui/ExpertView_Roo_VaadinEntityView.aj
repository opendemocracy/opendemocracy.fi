// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package fi.opendemocracy.web.ui;

import com.vaadin.addon.jpacontainer.EntityItem;
import com.vaadin.addon.jpacontainer.JPAContainer;
import com.vaadin.data.Item;
import com.vaadin.ui.Table;
import fi.opendemocracy.domain.Expert;
import fi.opendemocracy.web.EntityProviderUtil;
import fi.opendemocracy.web.EntityTableColumnGenerator;
import java.lang.Class;
import java.lang.Object;
import java.lang.String;
import java.util.List;

privileged aspect ExpertView_Roo_VaadinEntityView {
    
    private JPAContainer<Expert> ExpertView.tableContainer;
    
    public String ExpertView.getEntityName() {
        return "Expert";
    }
    
    public Class<Expert> ExpertView.getEntityClass() {
        return Expert.class;
    }
    
    public boolean ExpertView.isCreateAllowed() {
        return true;
    }
    
    public boolean ExpertView.isUpdateAllowed() {
        return true;
    }
    
    public boolean ExpertView.isDeleteAllowed() {
        return true;
    }
    
    public List<Expert> ExpertView.listEntities() {
        List<Expert> list = Expert.findAllExperts();
        return list;
    }
    
    public Expert ExpertView.saveEntity(Expert entity) {
        if (entity == null) {
            return null;
        }
        return (Expert) entity.merge();
    }
    
    public void ExpertView.deleteEntity(Expert entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean ExpertView.isNewEntity(Expert entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String ExpertView.getIdProperty() {
        return "id";
    }
    
    public String ExpertView.getVersionProperty() {
        return "version";
    }
    
    public Expert ExpertView.createEntityInstance() {
        return new Expert();
    }
    
    public JPAContainer<Expert> ExpertView.getTableContainer() {
        if (tableContainer == null) {
            JPAContainer<Expert> container = new JPAContainer<Expert>(Expert.class);
            container.setEntityProvider(EntityProviderUtil.get().getEntityProvider(Expert.class));
            tableContainer = container;
        }
        return tableContainer;
    }
    
    public Item ExpertView.getItemForEntity(Expert entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = tableContainer.createEntityItem(entity);
        }
        return item;
    }
    
    public Expert ExpertView.getEntityForItem(Item item) {
        if (item instanceof EntityItem && ((EntityItem) item).getEntity() instanceof Expert) {
            return (Expert) ((EntityItem) item).getEntity();
        } else {
            return null;
        }
    }
    
    public Object ExpertView.getIdForEntity(Expert entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void ExpertView.setupGeneratedColumns(Table table) {
        table.removeGeneratedColumn("category");
        table.addGeneratedColumn("category", new EntityTableColumnGenerator((String) getCategoryCaptionPropertyId()));
        table.removeGeneratedColumn("odUser");
        table.addGeneratedColumn("odUser", new EntityTableColumnGenerator((String) getODUserCaptionPropertyId()));
    }
    
    public Object ExpertView.getCategoryCaptionPropertyId() {
        return "name";
    }
    
    public Object ExpertView.getODUserCaptionPropertyId() {
        return null;
    }
    
}
