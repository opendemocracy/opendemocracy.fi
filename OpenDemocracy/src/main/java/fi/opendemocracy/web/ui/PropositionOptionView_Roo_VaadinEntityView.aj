// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package fi.opendemocracy.web.ui;

import com.vaadin.addon.jpacontainer.EntityItem;
import com.vaadin.addon.jpacontainer.JPAContainer;
import com.vaadin.data.Item;
import com.vaadin.ui.Table;
import fi.opendemocracy.domain.PropositionOption;
import fi.opendemocracy.web.EntityProviderUtil;
import fi.opendemocracy.web.EntityTableColumnGenerator;
import java.lang.Class;
import java.lang.String;
import java.util.List;

privileged aspect PropositionOptionView_Roo_VaadinEntityView {
    
    private JPAContainer<PropositionOption> PropositionOptionView.tableContainer;
    
    public String PropositionOptionView.getEntityName() {
        return "Proposition Option";
    }
    
    public Class<PropositionOption> PropositionOptionView.getEntityClass() {
        return PropositionOption.class;
    }
    
    public boolean PropositionOptionView.isCreateAllowed() {
        return true;
    }
    
    public boolean PropositionOptionView.isUpdateAllowed() {
        return true;
    }
    
    public boolean PropositionOptionView.isDeleteAllowed() {
        return true;
    }
    
    public List<PropositionOption> PropositionOptionView.listEntities() {
        List<PropositionOption> list = PropositionOption.findAllPropositionOptions();
        return list;
    }
    
    public PropositionOption PropositionOptionView.saveEntity(PropositionOption entity) {
        if (entity == null) {
            return null;
        }
        return (PropositionOption) entity.merge();
    }
    
    public void PropositionOptionView.deleteEntity(PropositionOption entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean PropositionOptionView.isNewEntity(PropositionOption entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String PropositionOptionView.getIdProperty() {
        return "id";
    }
    
    public String PropositionOptionView.getVersionProperty() {
        return "version";
    }
    
    public PropositionOption PropositionOptionView.createEntityInstance() {
        return new PropositionOption();
    }
    
    public JPAContainer<PropositionOption> PropositionOptionView.getTableContainer() {
        if (tableContainer == null) {
            JPAContainer<PropositionOption> container = new JPAContainer<PropositionOption>(PropositionOption.class);
            container.setEntityProvider(EntityProviderUtil.get().getEntityProvider(PropositionOption.class));
            tableContainer = container;
        }
        return tableContainer;
    }
    
    public Item PropositionOptionView.getItemForEntity(PropositionOption entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = tableContainer.createEntityItem(entity);
        }
        return item;
    }
    
    public PropositionOption PropositionOptionView.getEntityForItem(Item item) {
        if (item instanceof EntityItem && ((EntityItem) item).getEntity() instanceof PropositionOption) {
            return (PropositionOption) ((EntityItem) item).getEntity();
        } else {
            return null;
        }
    }
    
    public Object PropositionOptionView.getIdForEntity(PropositionOption entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void PropositionOptionView.setupGeneratedColumns(Table table) {
        // Add generated columns here
    }
    
}
