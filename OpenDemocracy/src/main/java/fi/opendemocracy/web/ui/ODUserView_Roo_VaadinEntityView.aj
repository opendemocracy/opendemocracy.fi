// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package fi.opendemocracy.web.ui;

import com.vaadin.addon.jpacontainer.EntityItem;
import com.vaadin.addon.jpacontainer.JPAContainer;
import com.vaadin.data.Item;
import com.vaadin.ui.Table;
import fi.opendemocracy.domain.ODUser;
import fi.opendemocracy.web.EntityProviderUtil;
import fi.opendemocracy.web.EntityTableColumnGenerator;
import java.lang.Class;
import java.lang.Object;
import java.lang.String;
import java.util.List;

privileged aspect ODUserView_Roo_VaadinEntityView {
    
    private JPAContainer<ODUser> ODUserView.tableContainer;
    
    public String ODUserView.getEntityName() {
        return "O D User";
    }
    
    public Class<ODUser> ODUserView.getEntityClass() {
        return ODUser.class;
    }
    
    public boolean ODUserView.isCreateAllowed() {
        return true;
    }
    
    public boolean ODUserView.isUpdateAllowed() {
        return true;
    }
    
    public boolean ODUserView.isDeleteAllowed() {
        return true;
    }
    
    public List<ODUser> ODUserView.listEntities() {
        List<ODUser> list = ODUser.findAllODUsers();
        return list;
    }
    
    public ODUser ODUserView.saveEntity(ODUser entity) {
        if (entity == null) {
            return null;
        }
        return (ODUser) entity.merge();
    }
    
    public void ODUserView.deleteEntity(ODUser entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean ODUserView.isNewEntity(ODUser entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String ODUserView.getIdProperty() {
        return "id";
    }
    
    public String ODUserView.getVersionProperty() {
        return "version";
    }
    
    public ODUser ODUserView.createEntityInstance() {
        return new ODUser();
    }
    
    public JPAContainer<ODUser> ODUserView.getTableContainer() {
        if (tableContainer == null) {
            JPAContainer<ODUser> container = new JPAContainer<ODUser>(ODUser.class);
            container.setEntityProvider(EntityProviderUtil.get().getEntityProvider(ODUser.class));
            tableContainer = container;
        }
        return tableContainer;
    }
    
    public Item ODUserView.getItemForEntity(ODUser entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = tableContainer.createEntityItem(entity);
        }
        return item;
    }
    
    public ODUser ODUserView.getEntityForItem(Item item) {
        if (item instanceof EntityItem && ((EntityItem) item).getEntity() instanceof ODUser) {
            return (ODUser) ((EntityItem) item).getEntity();
        } else {
            return null;
        }
    }
    
    public Object ODUserView.getIdForEntity(ODUser entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void ODUserView.setupGeneratedColumns(Table table) {
        // Add generated columns here
    }
    
    public Object ODUserView.getUserRoleCaptionPropertyId() {
        return null;
    }
    
}
