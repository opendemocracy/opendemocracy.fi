// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package fi.opendemocracy.web.ui;

import com.vaadin.addon.jpacontainer.EntityItem;
import com.vaadin.addon.jpacontainer.JPAContainer;
import com.vaadin.data.Item;
import com.vaadin.ui.Table;
import fi.opendemocracy.domain.Vote;
import fi.opendemocracy.web.EntityProviderUtil;
import fi.opendemocracy.web.EntityTableColumnGenerator;
import java.lang.Class;
import java.lang.Object;
import java.lang.String;
import java.util.List;

privileged aspect VoteView_Roo_VaadinEntityView {
    
    private JPAContainer<Vote> VoteView.tableContainer;
    
    public String VoteView.getEntityName() {
        return "Vote";
    }
    
    public Class<Vote> VoteView.getEntityClass() {
        return Vote.class;
    }
    
    public boolean VoteView.isCreateAllowed() {
        return true;
    }
    
    public boolean VoteView.isUpdateAllowed() {
        return true;
    }
    
    public boolean VoteView.isDeleteAllowed() {
        return true;
    }
    
    public List<Vote> VoteView.listEntities() {
        List<Vote> list = Vote.findAllVotes();
        return list;
    }
    
    public Vote VoteView.saveEntity(Vote entity) {
        if (entity == null) {
            return null;
        }
        return (Vote) entity.merge();
    }
    
    public void VoteView.deleteEntity(Vote entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean VoteView.isNewEntity(Vote entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String VoteView.getIdProperty() {
        return "id";
    }
    
    public String VoteView.getVersionProperty() {
        return "version";
    }
    
    public Vote VoteView.createEntityInstance() {
        return new Vote();
    }
    
    public JPAContainer<Vote> VoteView.getTableContainer() {
        if (tableContainer == null) {
            JPAContainer<Vote> container = new JPAContainer<Vote>(Vote.class);
            container.setEntityProvider(EntityProviderUtil.get().getEntityProvider(Vote.class));
            tableContainer = container;
        }
        return tableContainer;
    }
    
    public Item VoteView.getItemForEntity(Vote entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = tableContainer.createEntityItem(entity);
        }
        return item;
    }
    
    public Vote VoteView.getEntityForItem(Item item) {
        if (item instanceof EntityItem && ((EntityItem) item).getEntity() instanceof Vote) {
            return (Vote) ((EntityItem) item).getEntity();
        } else {
            return null;
        }
    }
    
    public Object VoteView.getIdForEntity(Vote entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void VoteView.setupGeneratedColumns(Table table) {
        table.removeGeneratedColumn("odUser");
        table.addGeneratedColumn("odUser", new EntityTableColumnGenerator((String) getODUserCaptionPropertyId()));
        table.removeGeneratedColumn("propositionOption");
        table.addGeneratedColumn("propositionOption", new EntityTableColumnGenerator((String) getPropositionOptionCaptionPropertyId()));
    }
    
    public Object VoteView.getODUserCaptionPropertyId() {
        return null;
    }
    
    public Object VoteView.getPropositionOptionCaptionPropertyId() {
        return null;
    }
    
}
